<!--
 ~ The MIT License
 ~
 ~ Copyright (c) 2018, CloudBees, Inc.
 ~
 ~ Permission is hereby granted, free of charge, to any person obtaining a copy
 ~ of this software and associated documentation files (the "Software"), to deal
 ~ in the Software without restriction, including without limitation the rights
 ~ to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 ~ copies of the Software, and to permit persons to whom the Software is
 ~ furnished to do so, subject to the following conditions:
 ~
 ~ The above copyright notice and this permission notice shall be included in
 ~ all copies or substantial portions of the Software.
 ~
 ~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 ~ IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 ~ FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 ~ AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 ~ LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 ~ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 ~ THE SOFTWARE.
 -->
<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:l="/lib/layout"
         xmlns:f="/lib/form">
  <l:layout title="${it.actionTitleText}" norefresh="true" permission="${app.ADMINISTER}">
    <st:include page="sidepanel.jelly" it="${app}"/>
    <l:main-panel>
      <h1>
        <img src="${resURL}/plugin/support-core/images/support.svg" alt=""/>
        ${it.actionTitle}
      </h1>
      <p>
        ${it.actionBlurb}
      </p>
      <p>
        ${%detail}
      </p>
      <j:if test="${it.anonymized}">
        <p>
          Support bundle anonymization is enabled. View
          <a href="../anonymizedMappings">anonymized mappings here</a>, or manage anonymization settings in the
          <a href="${rootURL}/configureSecurity">global security</a> under <i>Support Bundle Anonymization</i>.
        </p>
      </j:if>
      <j:if test="${!it.anonymized}">
        <p class="warning">
          Support bundle anonymization is disabled. This can be enabled in the
          <a href="${rootURL}/configureSecurity">global security</a> under <i>Support Bundle Anonymization</i>.
        </p>
      </j:if>
      <f:form name="bundle-contents" method="POST" action="generateAllBundles" id="bundle-contents-form">
        <j:forEach var="category" items="${it.categorizedComponents.entrySet()}">
          <section class="jenkins-section jenkins-section__bottom-padding">
            <h2 class="jenkins-section__title">${category.key.label}</h2>
            <div class="jenkins-section__items">
              <j:forEach var="component" items="${category.value}">
                <div name="components" class="jenkins-section__item">
                  <j:if test="${component.enabled}">
                    <f:checkbox title="${component.displayName}" name="selected" checked="${it.selectedByDefault(component)}"/>
                  </j:if>
                  <j:if test="${!component.enabled}">
                    <f:checkbox title="${%permissionPreReqs(component.displayPermissions)}" name="selected" checked="false" readOnlyMode="true"/>
                  </j:if>
                  <input type="hidden" name="name" value="${component.id}"/>
                </div>
              </j:forEach>
            </div>
          </section>
        </j:forEach>
        <f:entry>
          <f:submit value="${%Generate Bundle}" id="generate-support-bundle"/>
          <div id="loading-animation" style="display:none;">Loading...</div>

        </f:entry>
        <script>
        document.addEventListener("DOMContentLoaded", function () {
          const form = document.querySelector('#bundle-contents-form');

          // Intercept the form submission
          form.addEventListener('submit', function (event) {
            event.preventDefault(); // Prevent default form submission behavior
            const submitButton = document.querySelector('#generate-support-bundle');
            const loadingAnimation = document.querySelector('#loading-animation');

            // Disable the submit button and show loading animation
            submitButton.disabled = true;
            loadingAnimation.style.display = 'block';

            // Gather form data
            const formData = new FormData(form);
            const data = [];
            const components = form.querySelectorAll('div[name="components"]'); // Select all components
            components.forEach(component => {
              const selectedInput = component.querySelector('input[name="selected"]');
              const nameInput = component.querySelector('input[name="name"]');
              if (nameInput) {
                const componentData = {
                  name: nameInput.value,
                  selected: selectedInput.checked, // `true` if the checkbox is checked, `false` otherwise
                };
                data.push(componentData);
              }
            });

            console.log("Collected Data:", data);

            const payload = {
              components: data
            };

            // Create an XMLHttpRequest object
            const xhr = new XMLHttpRequest();

            // Configure the AJAX request
            xhr.open('POST', 'generateAllBundles?json='+ JSON.stringify(payload), true); // Use POST and target URL
            xhr.setRequestHeader('Content-Type', 'application/json'); // Set JSON headers
            xhr.setRequestHeader('Jenkins-Crumb', document.querySelector('input[name="Jenkins-Crumb"]').value);

            xhr.timeout = 0; // 0 => infinite timeout

            // Define the success response handler
            xhr.onload = function () {
              if (xhr.status === 200) {
                // Handle response as Blob to download support bundle
                const blob = new Blob([xhr.response], { type: 'application/zip' });
                const downloadUrl = URL.createObjectURL(blob);
                const downloadLink = document.createElement('a');
                downloadLink.href = downloadUrl;
                downloadLink.download = 'support-bundle.zip'; // Specify file name
                downloadLink.click();
                URL.revokeObjectURL(downloadUrl); // Clean up the URL object
              } else {
                console.error(`Request failed with status ${xhr.status}: ${xhr.statusText}`);
                alert('Failed to generate the support bundle.');
              }
            };

            // Handle timeout
            xhr.ontimeout = function () {
              console.error('Request timed out.');
              alert('The request took too long and was aborted.');
            };

            // Handle network errors
            xhr.onerror = function () {
              console.error('Network error occurred.');
              alert('A network error occurred while generating the support bundle. Please try again.');
            };

            // Set the response type to Blob (important for file downloads)
            xhr.responseType = 'blob';

            // Send the AJAX request with payload
            xhr.send(JSON.stringify(payload));

            // Finally, clean up and re-enable the form functionality
            xhr.onloadend = function () {
              submitButton.disabled = false;
              loadingAnimation.style.display = 'none';
            };
          });
        });
      </script>
      </f:form>
      <f:section title="${%Existing support bundles}">


        <f:form name="bundle-contents" method="POST">
          <j:forEach var="bundle" items="${it.bundles}">
            <f:entry field="bundle">
              <div name="bundles">
                <f:checkbox name="selected" checked="false"
                            title="${bundle}"/>
                <input style="display:none" name="name" value="${bundle}"/>
              </div>
            </f:entry>
          </j:forEach>
          <f:entry>
            <button type="submit" class="jenkins-button jenkins-button--primary jenkins-!-margin-1" formaction="downloadBundles">${%Download Bundle}</button>
            <button type="submit" class="jenkins-button jenkins-!-destructive-color" formaction="deleteBundles">${%Delete Bundle}</button>
          </f:entry>
        </f:form>
      </f:section>
    </l:main-panel>
  </l:layout>
</j:jelly>
